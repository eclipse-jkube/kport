name: "[RELEASE] Build native binaries"
on:
  release:
    types: [published]
jobs:
  build:
    name: Build kubectl-kport and kport-ide-server native binaries on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest,windows-latest,ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.2'
          java-version: '17'
          components: "native-image"
          github-token: ${{ github.token }}
          native-image-job-reports: 'false'

      - name: Build All on ${{ matrix.os }}
        run: |
          mvn clean install -DskipTests -Dnative

      - name: Upload kubectl for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: kubectl-kport/target/kubectl-kport.exe 
          asset_name: kubectl-kport-${{ runner.os }}.exe
          asset_content_type: application/octet-stream

      - name: Upload kport-ide-server for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path:  kport-ide-server/target/kport-ide-server.exe 
          asset_name: kport-ide-server-${{ runner.os }}.exe
          asset_content_type: application/octet-stream
      
      - name: Upload kubectl
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: kubectl-kport/target/kubectl-kport
          asset_name: kubectl-kport-${{ runner.os }}
          asset_content_type: application/octet-stream

      - name: Upload kport-ide-server
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: kport-ide-server/target/kport-ide-server
          asset_name: kport-ide-server-${{ runner.os }}
          asset_content_type: application/octet-stream

